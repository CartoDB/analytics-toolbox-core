const { runQuery } = require('../../../common/test-utils');

test('ST_BEZIERSPLINE should work', async () => {
    const query = `
        SELECT \`@@BQ_DATASET@@.ST_BEZIERSPLINE\`(ST_GEOGFROMTEXT("LINESTRING (121.025390625 -22.91792293614603, 130.6494140625 -19.394067895396613, 138.33984375 -25.681137335685307, 138.3837890625 -32.026706293336126)"), 100, 0.85) as bezierspline1,
               \`@@BQ_DATASET@@.ST_BEZIERSPLINE\`(ST_GEOGFROMTEXT("LINESTRING (-6 -0.5,-3 0.5,0 -0.5,3 0.5, 6 -0.5,9 0.5)"), 60, 0.85) as bezierspline2
    `;
    const rows = await runQuery(query);
    expect(rows.length).toEqual(1);
    expect(rows[0].bezierspline1.value).toEqual('LINESTRING(121.025390625 -22.917922936146, 121.209277870219 -22.8563998194176, 121.393165115439 -22.7948767026892, 121.577052360658 -22.7333535859608, 121.760939605878 -22.6718304692324, 121.944826851097 -22.610307352504, 122.128714096316 -22.5487842357757, 122.312601341536 -22.4872611190473, 122.496488586755 -22.4257380023189, 122.703321107411 -22.354009713337, 122.910153628067 -22.2822814243551, 123.116986148723 -22.2105531353732, 123.323818669379 -22.1388248463913, 123.530651190035 -22.0670965574094, 123.737483710692 -21.9953682684275, 123.944316231348 -21.9236399794456, 124.151148752004 -21.8519116904637, 124.330850636972 -21.7864328552327, 124.51055252194 -21.7209540200017, 124.690254406908 -21.6554751847707, 124.869956291876 -21.5899963495397, 125.049658176845 -21.5245175143087, 125.229360061813 -21.4590386790777, 125.409061946781 -21.3935598438467, 125.588763831749 -21.3280810086158, 125.768465716718 -21.2626021733848, 125.948167601686 -21.1971233381538, 126.127869486654 -21.1316445029228, 126.307571371622 -21.0661656676918, 126.48727325659 -21.0006868324608, 126.666975141559 -20.9352079972298, 126.846677026527 -20.8697291619988, 127.026378911495 -20.8042503267678, 127.205249337391 -20.7351442865796, 127.384119763286 -20.6660382463915, 127.562990189182 -20.5969322062033, 127.741860615077 -20.5278261660152, 127.920731040973 -20.458720125827, 128.099601466868 -20.3896140856389, 128.278471892764 -20.3205080454507, 128.457342318659 -20.2514020052626, 128.636212744555 -20.1822959650744, 128.81508317045 -20.1131899248863, 128.993953596346 -20.0440838846981, 129.172824022241 -19.97497784451, 129.351694448137 -19.9058718043218, 129.530564874033 -19.8367657641337, 129.709435299928 -19.7676597239455, 129.888305725824 -19.6985536837574, 130.186469293844 -19.8361679105204, 130.484632861864 -19.9737821372834, 130.782796429885 -20.1113963640464, 130.931878213895 -20.1802034774279, 131.080959997905 -20.2490105908094, 131.230041781915 -20.317817704191, 131.379123565926 -20.3866248175725, 131.528205349936 -20.455431930954, 131.677287133946 -20.5242390443355, 131.826368917956 -20.593046157717, 131.975450701967 -20.6618532710985, 132.124532485977 -20.73066038448, 132.273614269987 -20.7994674978615, 132.504131651986 -20.9927566315493, 132.734649033984 -21.1860457652371, 132.965166415983 -21.3793348989249, 133.195683797981 -21.5726240326127, 133.42620117998 -21.7659131663004, 133.656718561978 -21.9592022999882, 133.887235943977 -22.152491433676, 134.117753325976 -22.3457805673638, 134.26285958386 -22.4640011645739, 134.407965841744 -22.582221761784, 134.553072099628 -22.7004423589941, 134.698178357512 -22.8186629562041, 134.843284615396 -22.9368835534142, 134.98839087328 -23.0551041506243, 135.133497131164 -23.1733247478344, 135.278603389048 -23.2915453450445, 135.424355883389 -23.4075657091201, 135.57010837773 -23.5235860731958, 135.715860872071 -23.6396064372715, 135.861613366412 -23.7556268013471, 136.007365860754 -23.8716471654228, 136.153118355095 -23.9876675294985, 136.298870849436 -24.1036878935741, 136.444623343777 -24.2197082576498, 136.59394677251 -24.3357091560661, 136.743270201243 -24.4517100544824, 136.892593629977 -24.5677109528988, 137.04191705871 -24.6837118513151, 137.191240487443 -24.7997127497314, 137.340563916176 -24.9157136481477, 137.489887344909 -25.031714546564, 137.639210773642 -25.1477154449804)');
    expect(rows[0].bezierspline2.value).toEqual('LINESTRING(-6 -0.5, -3.66493055555556 0.425925925925926, -1.06111111111111 -0.240740740740741, 1.5 0, 4.06111111111111 0.240740740740741, 6.66493055555556 -0.425925925925926, 9 0.5)');
});

test('ST_BEZIERSPLINE should return NULL if any NULL mandatory argument', async () => {
    const query = `
        SELECT \`@@BQ_DATASET@@.ST_BEZIERSPLINE\`(NULL, 10000, 0.9) as bezierspline
    `;
    const rows = await runQuery(query);
    expect(rows.length).toEqual(1);
    expect(rows[0].bezierspline).toEqual(null);
});

test('ST_BEZIERSPLINE default values should work', async () => {
    const query = `
        SELECT \`@@BQ_DATASET@@.ST_BEZIERSPLINE\`(ST_GEOGFROMTEXT("LINESTRING (-76.091308 18.427501,-76.695556 18.729501,-76.552734 19.40443,-74.61914 19.134789,-73.652343 20.07657,-73.157958 20.210656)"), 10000, 0.85) as defaultValue,
               \`@@BQ_DATASET@@.ST_BEZIERSPLINE\`(ST_GEOGFROMTEXT("LINESTRING (-76.091308 18.427501,-76.695556 18.729501,-76.552734 19.40443,-74.61914 19.134789,-73.652343 20.07657,-73.157958 20.210656)"), NULL, NULL) as nullParam
    `;
    const rows = await runQuery(query);
    expect(rows.length).toEqual(1);
    expect(rows[0].nullParam).toEqual(rows[0].defaultValue);
});