{# Jinja2 macros for geometry-related SQL generation #}

{# Macro for creating GEOMETRY type hint #}
{% macro geometry_type() -%}
GEOMETRY
{%- endmacro %}

{# Macro for creating a NULL geometry #}
{% macro null_geometry() -%}
NULL::GEOMETRY
{%- endmacro %}

{# Macro for creating a point from lon/lat #}
{% macro point(lon, lat) -%}
ST_POINT({{ lon }}, {{ lat }})
{%- endmacro %}

{# Macro for creating an envelope/bbox #}
{% macro envelope(xmin, ymin, xmax, ymax) -%}
ST_MAKEENVELOPE({{ xmin }}, {{ ymin }}, {{ xmax }}, {{ ymax }})
{%- endmacro %}

{# Macro for converting WKT to geometry #}
{% macro from_wkt(wkt) -%}
ST_GEOMFROMTEXT({{ wkt }})
{%- endmacro %}

{# Macro for converting geometry to WKT #}
{% macro to_wkt(geom) -%}
ST_ASTEXT({{ geom }})
{%- endmacro %}

{# Macro for converting GeoJSON to geometry #}
{% macro from_geojson(geojson) -%}
ST_GEOMFROMGEOJSON({{ geojson }})
{%- endmacro %}

{# Macro for converting geometry to GeoJSON #}
{% macro to_geojson(geom) -%}
ST_ASGEOJSON({{ geom }})
{%- endmacro %}

{# Macro for creating external function with geometry parameter #}
{% macro external_function_with_geometry(schema, function_name, geom_param, other_params, return_type, lambda_arn, iam_role) -%}
CREATE OR REPLACE EXTERNAL FUNCTION {{ schema }}.{{ function_name }}(
    {{ geom_param }} GEOMETRY
    {%- if other_params -%}
    {%- for param in other_params -%}
    , {{ param.name }} {{ param.type }}
    {%- endfor -%}
    {%- endif %}
)
RETURNS {{ return_type }}
STABLE
LAMBDA '{{ lambda_arn }}'
IAM_ROLE '{{ iam_role }}';
{%- endmacro %}
