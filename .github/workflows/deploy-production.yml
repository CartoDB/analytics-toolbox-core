name: Production

on:
  push:
    branches:
      - master

env:
  BQ_BUCKET_OS: gs://spatialextension_os/
  BQ_BUCKET_ST: gs://spatialextension_st/
  BQ_BUCKET_SM: gs://spatialextension_sm/
  BQ_BUCKET_ME: gs://spatialextension_me/
  BQ_BUCKET_LA: gs://spatialextension_la/
  BQ_BUCKET_UN: gs://spatialextension_un/
  BQ_GROUP_ST: spatialextension_users_st@cartodb.com
  BQ_GROUP_SM: spatialextension_users_sm@cartodb.com
  BQ_GROUP_ME: spatialextension_users_me@cartodb.com
  BQ_GROUP_LA: spatialextension_users_la@cartodb.com
  BQ_GROUP_UN: spatialextension_users_un@cartodb.com

jobs:

  deploy-bq:
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    strategy:
      matrix:
        include:
          - region: us
            project: carto-os
            bucket: ${{ env.BQ_BUCKET_OS }}
            permissions: '[{"specialGroup":"allAuthenticatedUsers","role":"READER"}]'
          - region: us
            project: carto-st
            bucket: ${{ env.BQ_BUCKET_ST }}
            group: ${{ env.BQ_GROUP_ST }}
          - region: us
            project: carto-sm
            bucket: ${{ env.BQ_BUCKET_SM }}
            group: ${{ env.BQ_GROUP_SM }}
          - region: us
            project: carto-me
            bucket: ${{ env.BQ_BUCKET_ME }}
            group: ${{ env.BQ_GROUP_ME }}
          - region: us
            project: carto-la
            bucket: ${{ env.BQ_BUCKET_LA }}
            group: ${{ env.BQ_GROUP_LA }}
          - region: us
            project: carto-un
            bucket: ${{ env.BQ_BUCKET_UN }}
            group: ${{ env.BQ_GROUP_UN }}
          - region: eu
            project: carto-os-eu
            bucket: ${{ env.BQ_BUCKET_OS }}
            permissions: '[{"specialGroup":"allAuthenticatedUsers","role":"READER"}]'
          - region: eu
            project: carto-st-eu
            bucket: ${{ env.BQ_BUCKET_ST }}
            group: ${{ env.BQ_GROUP_ST }}
          - region: eu
            project: carto-sm-eu
            bucket: ${{ env.BQ_BUCKET_SM }}
            group: ${{ env.BQ_GROUP_SM }}
          - region: eu
            project: carto-me-eu
            bucket: ${{ env.BQ_BUCKET_ME }}
            group: ${{ env.BQ_GROUP_ME }}
          - region: eu
            project: carto-la-eu
            bucket: ${{ env.BQ_BUCKET_LA }}
            group: ${{ env.BQ_GROUP_LA }}
          - region: eu
            project: carto-un-eu
            bucket: ${{ env.BQ_BUCKET_UN }}
            group: ${{ env.BQ_GROUP_UN }}
    env:
      GCLOUD_VERSION: 290.0.1
      BQ_REGION: ${{ matrix.region }}
      BQ_PROJECT: ${{ matrix.project }}
      BQ_BUCKET: ${{ matrix.bucket }}
      BQ_PERMISSIONS: ${{ matrix.permissions }}
      BQ_PERMISSIONS_GROUP: ${{ matrix.group }}
      BQ_PERMISSIONS_ROLE_NAME: spatialextensionUser
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Check diff
        uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: '**/*.+(js|sql)'
          FILES: 'Makefile'
      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
            version: ${{ env.GCLOUD_VERSION }}
            project_id: ${{ env.BQ_PROJECT }}
            service_account_key: ${{ secrets.BQCARTO_DEPLOY_CLOUD_EXTENSIONS_SA_BASE64 }}
            export_default_credentials: true
      - name: Deploy to production
        run: make deploy CLOUD=bigquery

  deploy-sf:
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    env:
      SNOWSQL_VERSION: 1.2.13
      SNOWSQL: ~/snowflake/snowsql
      SNOWSQL_DEST: ~/snowflake
      SNOWSQL_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      SNOWSQL_USER: ${{ secrets.SF_USERNAME }}
      SNOWSQL_PWD: ${{ secrets.SF_PASSWORD }}
      SF_DATABASE: SFCARTO
      SF_SHARE_ENABLED: 1
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Check diff
        uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: '**/*.+(js|sql)'
          FILES: 'Makefile'
      - name: Install snowsql
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-${{env.SNOWSQL_VERSION}}-linux_x86_64.bash
          SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-${{env.SNOWSQL_VERSION}}-linux_x86_64.bash
      - name: Deploy to production
        run: make deploy CLOUD=snowflake