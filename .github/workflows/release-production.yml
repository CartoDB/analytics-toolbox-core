name: Release Production

on:
  workflow_dispatch:
    inputs:
      cloud:
        description: 'Cloud warehouse (snowflake)'
        required: true
        default: ''

env:
  GCLOUD_VERSION: 290.0.1

jobs:

  release-sf:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    if: ${{ github.event.inputs.cloud == 'snowflake'}}
    env:
      PACKAGE_BUCKET: gs://carto-analytics-toolbox-core/snowflake
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Check diff
        uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: '**/*.+(js|sql)'
          FILES: 'Makefile'
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
            version: ${{ env.GCLOUD_VERSION }}
            project_id: ${{ secrets.GCLOUD_PRODUCTION_PROJECT }}
            service_account_key: ${{ secrets.GCLOUD_PRODUCTION_RELEASE_SA }}
            export_default_credentials: true
      - name: Create installation package
        run: ./common/snowflake/create_installation_package.sh
      - name: Upload the package to the bucket
        run: |
          gsutil -h "Content-Type:text/plain" cp dist/version ${{ env.PACKAGE_BUCKET }}/latest/
          gsutil -h "Content-Type:application/sql" cp dist/modules.sql ${{ env.PACKAGE_BUCKET }}/latest/
      - name: Upload the package as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: carto-analytics-toolbox-core-snowflake
          path: dist/*

  release-rs:
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    if: ${{ github.event.inputs.cloud == 'redshift'}}
    env:
      PACKAGE_TYPE: CORE
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup virtualenv
        run: pip install virtualenv
      - name: Create installation package
        run: ./common/redshift/release_installation_package.sh
      - name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: carto-analytics-toolbox-core-redshift
          path: dist/*
      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.RS_INSTALLATIONPACKAGE_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.RS_INSTALLATIONPACKAGE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.RS_INSTALLATIONPACKAGE_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'   # optional: defaults to us-east-1
          SOURCE_DIR: 'dist'      # optional: defaults to entire repository
