name: Redshift CI/CD

on:
  push:
    paths:
      - "clouds/redshift"

env:
  NODE_VERSION: 14
  PYTHON2_VERSION: 2.7.18
  PYTHON3_VERSION: 3.8.10

jobs:

  test:
    if: github.ref_name != 'master'
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    env:
      RS_SCHEMA: ci_${{ github.sha }}_${{ github.run_id }}_
      RS_HOST: ${{ secrets.RS_HOST }}
      RS_DATABASE: ${{ secrets.RS_DATABASE }}
      RS_USER: ${{ secrets.RS_USER }}
      RS_PASSWORD: ${{ secrets.RS_PASSWORD }}
      RS_BUCKET: ${{ secrets.RS_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.RS_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.RS_AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Check diff
        uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: '**/*.+(py|sql)'
          FILES: 'Makefile'
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON2_VERSION }}
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON3_VERSION }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.RS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.RS_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Setup virtualenv
        run: pip install virtualenv
      - name: Run linter and tests
        run: |
          cd clouds/redshift
          make lint
          make deploy
          make test
          make remove

  deploy:
    if: github.ref_name == 'master'
    runs-on: ubuntu-20.04
    timeout-minutes: 30

  publish:
    if: github.ref_name == 'master'
    runs-on: ubuntu-20.04
    timeout-minutes: 30

