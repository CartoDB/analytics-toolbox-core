name: Redshift CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "clouds/redshift/**"
      - ".github/workflows/redshift.yml"
  pull_request:
    paths:
      - "clouds/redshift/**"
      - ".github/workflows/redshift.yml"
  workflow_dispatch:
  workflow_call:

env:
  NODE_VERSION: 14
  PYTHON2_VERSION: 2.7.18
  PYTHON3_VERSION: 3.8.10
  GCLOUD_VERSION: 290.0.1

jobs:

  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    env:
      RS_PREFIX: ci_${{ github.sha }}_${{ github.run_id }}_${{ github.run_attempt }}_
      RS_HOST: ${{ secrets.RS_HOST_CI }}
      RS_DATABASE: ${{ secrets.RS_DATABASE_CI }}
      RS_USER: ${{ secrets.RS_USER_CI }}
      RS_PASSWORD: ${{ secrets.RS_PASSWORD_CI }}
      RS_BUCKET: ${{ secrets.RS_BUCKET_CI }}
      AWS_ACCESS_KEY_ID: ${{ secrets.RS_AWS_ACCESS_KEY_ID_CI }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.RS_AWS_SECRET_ACCESS_KEY_CI }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Check diff
        uses: technote-space/get-diff-action@v4
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup python 2
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON2_VERSION }}
      - name: Setup python 3
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON3_VERSION }}
      - name: Setup virtualenv
        run: pip install virtualenv
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.RS_AWS_ACCESS_KEY_ID_CI }}
          aws-secret-access-key: ${{ secrets.RS_AWS_SECRET_ACCESS_KEY_CI }}
          aws-region: ${{ secrets.RS_REGION_CI }}
      - name: Run linter and tests
        run: |
          cd clouds/redshift
          make lint && \
          make deploy diff="$GIT_DIFF" && \
          make test diff="$GIT_DIFF" && \
          make remove

  deploy-internal:
    if: github.ref_name == 'main'
    needs: test
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    env:
      RS_HOST: ${{ secrets.RS_HOST_CD }}
      RS_DATABASE: ${{ secrets.RS_DATABASE_CD }}
      RS_USER: ${{ secrets.RS_USER_CD }}
      RS_PASSWORD: ${{ secrets.RS_PASSWORD_CD }}
      RS_BUCKET: ${{ secrets.RS_BUCKET_CD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.RS_AWS_ACCESS_KEY_ID_CD }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.RS_AWS_SECRET_ACCESS_KEY_CD }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Check diff
        uses: technote-space/get-diff-action@v4
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup python 2
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON2_VERSION }}
      - name: Setup python 3
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON3_VERSION }}
      - name: Setup virtualenv
        run: pip install virtualenv
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.RS_AWS_ACCESS_KEY_ID_CD }}
          aws-secret-access-key: ${{ secrets.RS_AWS_SECRET_ACCESS_KEY_CD }}
          aws-region: ${{ secrets.RS_REGION_CD }}
      - name: Run deploy
        run: |
          cd clouds/redshift
          make deploy diff="$GIT_DIFF" production=1

  publish:
    if: github.ref_name == 'stable'
    needs: test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    env:
      PACKAGE_BUCKET: gs://carto-analytics-toolbox-core/redshift
      LIBS_URL: https://storage.googleapis.com/carto-analytics-toolbox-core/redshift/latest/libs
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup python 2
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON2_VERSION }}
      - name: Setup virtualenv
        run: pip install virtualenv
      - name: Auth google
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCLOUD_PRODUCTION_RELEASE_SA }}
          project_id: ${{ secrets.GCLOUD_PRODUCTION_PROJECT }}
          create_credentials_file: true
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
            version: ${{ env.GCLOUD_VERSION }}
            project_id: ${{ secrets.GCLOUD_PRODUCTION_PROJECT }}
      - name: Create package
        run: |
          cd clouds/redshift
          make create-package
      - name: Publish package
        run: |
          cd clouds/redshift
          gsutil -h "Content-Type:application/zip" -m cp dist/*.zip ${{ env.PACKAGE_BUCKET }}/
          gsutil -h "Content-Type:application/zip" -m cp dist/*.zip ${{ env.PACKAGE_BUCKET }}/carto-analytics-toolbox-core-redshift-latest.zip
          gsutil -h "Content-Type:application/zip" -m cp build/libs/*.zip ${{ env.PACKAGE_BUCKET }}/latest/libs/
          gsutil -h "Content-Type:application/json" -m cp dist/*.json ${{ env.PACKAGE_BUCKET }}/
