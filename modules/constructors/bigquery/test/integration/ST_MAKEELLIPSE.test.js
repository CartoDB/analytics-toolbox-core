const { runQuery } = require('../../../../../common/bigquery/test-utils');

test('ST_MAKEELLIPSE should work', async () => {
    const query = `
        SELECT \`@@BQ_PREFIX@@constructors.ST_MAKEELLIPSE\`(ST_GEOGPOINT(-73.9385,40.6643), 5, 3, -30, "miles", 20) as ellipse1,
               \`@@BQ_PREFIX@@constructors.ST_MAKEELLIPSE\`(ST_GEOGPOINT(13.9385,0.6643), 10, 2, 15, "kilometers", 10) as ellipse2,
               \`@@BQ_PREFIX@@constructors.ST_MAKEELLIPSE\`(ST_GEOGPOINT(53.9385,-10.6643), 8, 7, 100, "miles", 15) as ellipse3
    `;
    const rows = await runQuery(query);
    expect(rows.length).toEqual(1);
    expect(rows[0].ellipse1.value).toEqual('POLYGON((-73.8558575786687 40.7004828957859, -73.8878803189136 40.715591239565, -73.9188988779962 40.7153693253336, -73.9397433819982 40.7113572498417, -73.954735264153 40.7067892613415, -73.9671284794562 40.7019023683197, -73.9789045956043 40.6962064262995, -73.9916134686199 40.6886451333642, -74.0066091031436 40.6769633168835, -74.022354519163 40.6567055668297, -74.0210975999164 40.628117104214, -73.989106189154 40.6129976213935, -73.9581103058317 40.6132200775603, -73.9372735215534 40.6172357289648, -73.9222828567823 40.6218073299014, -73.9098876562536 40.6266976316803, -73.8981069458948 40.6323969824576, -73.8853898829271 40.6399618878293, -73.8703796266113 40.6516472802227, -73.8546104888196 40.6719055722118, -73.8558575786687 40.7004828957859))');
    expect(rows[0].ellipse2.value).toEqual('POLYGON((14.0253733132964 0.641023876221952, 13.9660437436047 0.674873367189298, 13.9487788701547 0.680127685755581, 13.9375126246132 0.683146259296274, 13.9199334393584 0.687227735942478, 13.8516262775028 0.687576123778048, 13.9109562344223 0.653726654488496, 13.9282211423078 0.648472319726437, 13.9394873920817 0.645453735221709, 13.9570665554045 0.641372242379728, 14.0253733132964 0.641023876221952))');
    expect(rows[0].ellipse3.value).toEqual('POLYGON((53.9180368848909 -10.7783262281486, 53.967017026374 -10.7736548191399, 54.006259920026 -10.7480265037995, 54.0307827063168 -10.7119318650099, 54.0414574568363 -10.6715559473322, 54.0385298751631 -10.6293457713217, 54.0196441809417 -10.5885461999127, 53.9827176958605 -10.5578228046001, 53.9339983616262 -10.549388281462, 53.8886093187913 -10.5658564396383, 53.8566686389825 -10.5978456336183, 53.8392314125991 -10.6365168500594, 53.8352114760092 -10.6780344984097, 53.8456906073195 -10.7201869595605, 53.8736415230188 -10.7574612028843, 53.9180368848909 -10.7783262281486))');
});

test('ST_MAKEELLIPSE should return NULL if any NULL mandatory argument', async () => {
    const query = `
        SELECT \`@@BQ_PREFIX@@constructors.ST_MAKEELLIPSE\`(NULL, 5, 3, -30, "miles", 80) as ellipse1,
               \`@@BQ_PREFIX@@constructors.ST_MAKEELLIPSE\`(ST_GEOGPOINT(-73.9385,40.6643), NULL, 3, -30, "miles", 80) as ellipse2,
               \`@@BQ_PREFIX@@constructors.ST_MAKEELLIPSE\`(ST_GEOGPOINT(-73.9385,40.6643), 5, NULL, -30, "miles", 80) as ellipse3
    `;
    const rows = await runQuery(query);
    expect(rows.length).toEqual(1);
    expect(rows[0].ellipse1).toEqual(null);
    expect(rows[0].ellipse2).toEqual(null);
    expect(rows[0].ellipse3).toEqual(null);
});

test('ST_MAKEELLIPSE default values should work', async () => {
    const query = `
        SELECT \`@@BQ_PREFIX@@constructors.ST_MAKEELLIPSE\`(ST_GEOGPOINT(-73.9385,40.6643), 5, 3, 0, "kilometers", 64) as defaultValue,
               \`@@BQ_PREFIX@@constructors.ST_MAKEELLIPSE\`(ST_GEOGPOINT(-73.9385,40.6643), 5, 3, NULL, NULL, NULL) as nullParam
    `;
    const rows = await runQuery(query);
    expect(rows.length).toEqual(1);
    expect(rows[0].nullParam).toEqual(rows[0].defaultValue);
});